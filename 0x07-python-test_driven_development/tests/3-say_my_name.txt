=================================================
Instructions on function usage of 3-say_my_name.py
==================================================

This modules defines a function ``say_my_name(first_name, last_name="")``.

How to use it:
==============

``say_my_name(...)`` prints "My name is <first_name> <last_name>".

::

    >>> say_my_name = __import__('3-say_my_name').say_my_name
    >>> say_my_name("Sherlock", "Holmes")
    My name is Sherlock Holmes

::

    >>> say_my_name("DeMarcus Cousins", "King IV")
    My name is DeMarcus Cousins King IV

The parameter ```last_name``` is optional. If no last name is provided,
an empty string is printed instead.

::

    >>> say_my_name("Sherlock")
    My name is Sherlock 

Invalid Names:
==============

The parameters ``first_name`` and ``last_name``` must be strings. Otherwise,
a TypeError is raised.

::

    >>> say_my_name(77, "Luka")
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name("Tyrese", ["seventy", "Clippers", "Cowboys"])
    Traceback (most recent call last):
    TypeError: last_name must be a string

::

    >>> say_my_name({"Tyrese": 77, "Luka": 88}, 8.7)
    Traceback (most recent call last):
    TypeError: first_name must be a string

::

    >>> say_my_name(None)
    Traceback (most recent call last):
    TypeError: first_name must be a string

At least one name must be provided.

::

    >>> say_my_name()
    Traceback (most recent call last):
    TypeError: say_my_name() missing 1 required positional argument: 'first_name'

